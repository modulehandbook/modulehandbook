# .reek.yml
# https://github.com/troessner/reek?tab=readme-ov-file#configuration-options

---

### Generic smell configuration

detectors:
  # You can disable smells completely
  IrresponsibleModule:
    enabled: false

  TooManyInstanceVariables:
    exclude:
      - "SystemTestConfig" # it's a config, maybe put them in a dict
  TooManyStatements: 
    exclude:
      - 'SystemTestConfig#config_selenium'
  InstanceVariableAssumption:
    exclude:
      - "SystemTestConfig" # TBD: refactor or remove SystemTestConfig?
  
  # You can use filters to silence Reek warnings.
  # Either because you simply disagree with Reek (we are not the police) or
  # because you want to fix this at a later point in time.
  # NestedIterators:
  #   exclude:
  #     - "MyWorker#self.class_method" # should be refactored
  #     - "AnotherWorker#instance_method" # should be refactored as well

  # A lot of smells allow fine tuning their configuration. You can look up all available options
  # in the corresponding smell documentation in /docs. In most cases you probably can just go
  # with the defaults as documented in defaults.reek.yml.
  # DataClump:
  #   max_copies: 3
  #   min_clump_size: 3

### Directory specific configuration

# You can configure smells on a per-directory base.
# E.g. the classic Rails case: controllers smell of NestedIterators (see /docs/Nested-Iterators.md) and
# helpers smell of UtilityFunction (see docs/Utility-Function.md)
#
# Note that we only allow configuration on a directory level, not a file level,
# so all paths have to point to directories.
# A Dir.glob pattern can be used.
# directories:
#   "web_app/app/controllers":
#     NestedIterators:
#       enabled: false
#   "web_app/app/helpers**":
#     UtilityFunction:
#       enabled: false
#   "web_app/lib/**/test/**":
#     UtilityFunction:
#       enabled: false

### Excluding directories



# Directories and files below will not be scanned at all
exclude_paths:
  - db/migrate
  # todo: fix reek errors in files below
  - app
  - test-api
#  - config
#  - test
  - test/application_system_test_case.rb
  - test/authorisation
  - test/channels
  - test/controllers
  - test/fixtures
  - test/helpers
  - test/integration
  - test/mailers
  - test/models
  - test/rails-api
  - test/system
